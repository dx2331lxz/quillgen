[INFO][2025-04-13 17:10:18,104][autoreload.py:677]Watching for file changes with StatReloader
[INFO][2025-04-13 17:19:21,664][autoreload.py:677]Watching for file changes with StatReloader
[INFO][2025-04-13 17:19:44,526][autoreload.py:677]Watching for file changes with StatReloader
[INFO][2025-04-14 04:17:33,831][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 04:17:36,510][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 04:17:40,316][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 04:17:47,998][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 04:56:28,628][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 04:57:17,200][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 05:08:06,273][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 05:08:50,736][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 05:10:34,245][middleware.py:13]Received GET request to /robots.txt from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 05:10:34,635][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 05:16:15,707][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 05:16:17,470][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 11:44:56,568][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 11:44:58,524][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 11:44:59,798][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 11:45:20,989][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 11:45:23,413][middleware.py:13]Received GET request to /robots.txt from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 11:45:25,425][middleware.py:13]Received GET request to /sitemap.xml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 11:56:41,193][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 11:56:47,244][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 12:17:10,562][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 12:23:01,833][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 12:23:24,803][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 12:45:41,353][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 16:03:17,064][middleware.py:13]Received GET request to /api/user/email/ from None with query params: <QueryDict: {'email': ['2667845426@qq.com']}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 16:04:58,327][middleware.py:13]Received POST request to /api/user/email/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 16:04:58,895][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 16:19:35,207][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:07:46,549][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:07:49,906][middleware.py:13]Received GET request to /wp from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:07:53,182][middleware.py:13]Received GET request to /wordpress from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:07:56,103][middleware.py:13]Received GET request to /editor from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:07:58,433][middleware.py:13]Received GET request to /wordpress from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:08:00,417][middleware.py:13]Received GET request to /old from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:08:05,426][middleware.py:13]Received GET request to /backup from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:08:09,026][middleware.py:13]Received GET request to /new from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:08:11,758][middleware.py:13]Received GET request to /test from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:08:13,930][middleware.py:13]Received GET request to /wp from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:08:16,127][middleware.py:13]Received GET request to /temp from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 18:08:18,134][middleware.py:13]Received GET request to /blog from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 21:17:06,144][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 21:17:07,376][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-14 21:17:20,470][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 21:17:20,845][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-14 21:20:18,938][middleware.py:13]Received GET request to /api/user/email/ from None with query params: <QueryDict: {'email': ['funny233xyz@foxmail.com']}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 21:20:36,551][middleware.py:13]Received POST request to /api/user/email/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 21:20:36,941][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 21:20:37,340][middleware.py:13]Received GET request to /media/avatar/5cf0b8f6acb15c6051e57e31503fb3d3ad945f96.jpg from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 21:24:16,744][middleware.py:13]Received POST request to /api/ai/generate-with-context/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'prompt': ['根据知识库文档，生成一段关于Formdata发送多文件的方法'], 'user_text': ['']}>
[INFO][2025-04-14 21:25:57,940][middleware.py:13]Received POST request to /api/ai/generate-with-context/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'prompt': ['根据知识库文档，生成一段关于Formdata发送多文件的方法'], 'user_text': ['去年，泰国艺人Lisa在社交平台晒出LABUBU系列产品，让其一跃成为全球爆款，为泡泡玛特带来了超30亿元的收入。\r\n\r\n不过在四年前，泡泡玛特是顶着争议上市的，外界质疑其商业模式单一，缺乏多元化的盈利渠道，更担心旗下IP生命周期短暂，容易触碰成长天花板。\r\n\r\n如今看来，泡泡玛特用业绩回应了外界的质疑，其在近日交出了一份“史上最强”的业绩报告：2024年实现营收130.4亿元，同比增长106.9%；经调整净利润34.0亿元，同比增长185.9%。\r\n\r\n资本市场也用真金白银投下信任票。截至撰稿日，泡泡玛特的市值已经超过了2100亿港元，股价涨幅超过了600%。也就是说，仅一年时间，泡泡玛特的市值涨了超1800亿港元。\r\n\r\n不可否认，LABUBU在全球爆火，让泡泡玛特找到了新的“流量密码”。但如果只是一个IP的出圈，是无法彻底解决外界对其商业模式单一的质疑，泡泡玛特去年以来的“狂飙”，是其在IP矩阵、品类创新和海外市场等多方面的全面发力。\r\n\r\n不过，这些努力能否让泡泡玛特从“潮玩玩具公司”顺利转型为“IP运营公司”，找到持续增长的可能性，我们还需要从财报中找到更多线索。\r\n\r\n2024年的泡泡玛特，像是一台高速运转的机器，在各个业务板块都取得了显著增长。']}>
[INFO][2025-04-14 21:27:16,404][middleware.py:13]Received POST request to /api/ai/generate-with-context/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'prompt': ['根据知识库文档，生成有关泡泡玛特的上市过程'], 'user_text': ['去年，泰国艺人Lisa在社交平台晒出LABUBU系列产品，让其一跃成为全球爆款，为泡泡玛特带来了超30亿元的收入。\r\n\r\n不过在四年前，泡泡玛特是顶着争议上市的，外界质疑其商业模式单一，缺乏多元化的盈利渠道，更担心旗下IP生命周期短暂，容易触碰成长天花板。\r\n\r\n如今看来，泡泡玛特用业绩回应了外界的质疑，其在近日交出了一份“史上最强”的业绩报告：2024年实现营收130.4亿元，同比增长106.9%；经调整净利润34.0亿元，同比增长185.9%。\r\n\r\n资本市场也用真金白银投下信任票。截至撰稿日，泡泡玛特的市值已经超过了2100亿港元，股价涨幅超过了600%。也就是说，仅一年时间，泡泡玛特的市值涨了超1800亿港元。\r\n\r\n不可否认，LABUBU在全球爆火，让泡泡玛特找到了新的“流量密码”。但如果只是一个IP的出圈，是无法彻底解决外界对其商业模式单一的质疑，泡泡玛特去年以来的“狂飙”，是其在IP矩阵、品类创新和海外市场等多方面的全面发力。\r\n\r\n不过，这些努力能否让泡泡玛特从“潮玩玩具公司”顺利转型为“IP运营公司”，找到持续增长的可能性，我们还需要从财报中找到更多线索。\r\n\r\n2024年的泡泡玛特，像是一台高速运转的机器，在各个业务板块都取得了显著增长。']}>
[INFO][2025-04-14 22:05:00,921][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 22:05:01,088][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-14 22:05:09,204][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 22:05:09,342][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-14 22:05:14,429][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-14 22:05:14,608][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 00:09:06,978][middleware.py:13]Received GET request to /wp from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 00:09:08,796][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 00:10:48,056][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 00:18:23,499][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 00:19:15,516][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 08:25:53,891][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 08:25:55,147][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 08:26:02,707][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 09:02:20,384][middleware.py:13]Received POST request to /api/token/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 10:46:18,380][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 10:46:39,353][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 13:37:47,012][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 13:39:49,856][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 13:39:50,106][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:43:08,903][middleware.py:13]Received GET request to /api/user/email/ from None with query params: <QueryDict: {'email': ['3434055686@qq.com']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:43:22,652][middleware.py:13]Received POST request to /api/user/email/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:43:23,032][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:47:02,149][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:47:02,455][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:50:17,496][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:52:30,900][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:52:31,152][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:53:13,845][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:53:14,130][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:53:18,008][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:53:18,135][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:53:24,764][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:53:25,032][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:54:01,277][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:54:01,565][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:54:29,781][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:54:30,026][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:54:59,077][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:54:59,433][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:55:44,273][middleware.py:13]Received POST request to /api/ai/wrong2right/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:55:57,751][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:56:41,646][middleware.py:13]Received POST request to /api/ai/wrong2right/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:56:42,335][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:56:52,484][middleware.py:13]Received POST request to /api/ai/wrong2right/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:56:57,748][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 14:57:26,166][middleware.py:13]Received POST request to /api/ai/wrong2right/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 14:57:38,915][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 15:00:09,080][middleware.py:13]Received POST request to /api/ai/summary/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:00:09,533][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 15:00:45,793][middleware.py:13]Received POST request to /api/ai/summary/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:00:47,972][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 15:02:41,082][middleware.py:13]Received POST request to /api/ai/summary/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:02:42,885][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 15:09:01,088][middleware.py:13]Received POST request to /api/ai/generate-with-context/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'prompt': ['帮我写一个小故事'], 'user_text': ['\r\n\r\n']}>
[INFO][2025-04-15 15:09:33,408][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:09:33,740][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 15:11:06,443][middleware.py:13]Received POST request to /api/ai/polish/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:11:06,731][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 15:12:08,013][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:12:08,386][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 15:12:56,960][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:13:06,977][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:13:07,321][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 15:14:59,006][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:14:59,307][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 15:36:31,896][middleware.py:13]Received GET request to /api/user/email/ from None with query params: <QueryDict: {'email': ['baitime@foxmail.com']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:36:58,974][middleware.py:13]Received POST request to /api/user/email/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:36:59,502][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:37:10,795][middleware.py:13]Received POST request to /api/user/name/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:37:11,190][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:38:15,188][middleware.py:13]Received POST request to /api/ai/generate-with-context/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'prompt': ['写一篇介绍路修哲的文字'], 'user_text': ['']}>
[INFO][2025-04-15 15:39:07,994][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:39:39,990][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:40:01,281][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:40:40,128][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:42:08,017][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:58:18,767][middleware.py:13]Received GET request to /api/user/email/ from None with query params: <QueryDict: {'email': ['3434055686@qq.com']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:58:37,945][middleware.py:13]Received POST request to /api/user/email/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:58:38,326][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 15:59:26,466][middleware.py:13]Received POST request to /api/ai/generate-with-context/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'prompt': ['介绍一下路修哲'], 'user_text': ['']}>
[INFO][2025-04-15 16:00:13,722][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:00:51,985][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:04:54,040][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:05:29,482][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:08:33,641][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:08:33,914][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:09:23,037][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:09:23,267][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:09:50,627][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:09:50,876][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:09:53,941][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:09:55,362][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:10:21,476][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:10:21,787][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:10:51,228][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:10:51,507][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:11:39,918][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:12:14,990][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:12:15,321][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:13:01,050][middleware.py:13]Received POST request to /api/ai/wrong2right/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:13:06,590][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:13:57,022][middleware.py:13]Received POST request to /api/ai/wrong2right/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:13:57,712][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:14:04,553][middleware.py:13]Received POST request to /api/ai/wrong2right/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:14:08,683][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:14:29,280][middleware.py:13]Received POST request to /api/ai/wrong2right/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:14:48,605][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:14:56,270][middleware.py:13]Received POST request to /api/ai/wrong2right/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:15:08,093][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:15:56,835][middleware.py:13]Received POST request to /api/ai/summary/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:15:57,344][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:16:12,447][middleware.py:13]Received POST request to /api/ai/summary/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:16:12,928][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:16:45,919][middleware.py:13]Received POST request to /api/ai/summary/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:16:47,122][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:17:13,146][middleware.py:13]Received POST request to /api/ai/summary/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:17:13,581][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:17:21,068][middleware.py:13]Received POST request to /api/ai/summary/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:17:21,816][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:18:00,392][middleware.py:13]Received POST request to /api/ai/summary/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:18:01,381][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:18:27,713][middleware.py:13]Received POST request to /api/ai/summary/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:18:28,297][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:22:29,110][middleware.py:13]Received POST request to /api/ai/continue/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:22:29,418][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:24:10,550][middleware.py:13]Received POST request to /api/ai/continue/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:24:10,810][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:24:43,554][middleware.py:13]Received POST request to /api/ai/continue/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:24:43,888][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:25:10,057][middleware.py:13]Received POST request to /api/ai/continue/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:25:10,316][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:26:21,340][middleware.py:13]Received POST request to /api/ai/continue/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:26:21,666][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:28:45,705][middleware.py:13]Received POST request to /api/ai/polish/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:28:45,949][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:29:41,256][middleware.py:13]Received POST request to /api/ai/polish/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:29:41,523][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:30:21,386][middleware.py:13]Received POST request to /api/ai/polish/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:30:21,690][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:31:07,166][middleware.py:13]Received POST request to /api/ai/polish/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:31:07,425][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:31:50,011][middleware.py:13]Received POST request to /api/ai/polish/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:31:50,288][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:33:22,983][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:23,366][middleware.py:13]Received GET request to /media/avatar/5cf0b8f6acb15c6051e57e31503fb3d3ad945f96.jpg from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:37,648][middleware.py:13]Received POST request to /api/ai/draw/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:37,798][views.py:1030]{'refresh_token': '25.27111494df01216a0a36fae1e6a9d85e.315360000.2060066017.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWEjheATeg33YUrEZmWgh6n5Z2qTVy2hjI3fEleQaakIIQcVVyjMCLSxH+j804EaUqWrwrLKWOVQBULnfz98rNIVLXig=', 'access_token': '24.c8ae15cf5ae68e934dc9a96a48e5b806.2592000.1747298017.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'be7d1ad7477209b1e2d805c2e65a1d7a'}
[INFO][2025-04-15 16:33:37,799][views.py:1037]https://aip.baidubce.com/rpc/2.0/wenxin/v1/basic/textToImage?access_token=24.c8ae15cf5ae68e934dc9a96a48e5b806.2592000.1747298017.282335-106324455
[INFO][2025-04-15 16:33:37,800][views.py:1047]{'text': '"请绘制一幅赛博朋克风格的未来城市夜景：  前景：穿霓虹反光夹克的机械义体人正在雨中维修全息广告牌 中景：悬浮汽车在玻璃幕墙大厦间穿梭，楼体有汉字LED广告（需显示‘量子’二字） 背景：笼罩在粉色雾霾中的巨型企业金字塔总部 风格：银翼杀手式光影+日式赛博朋克细节 关键细节：广告牌必须显示可识别的二进制代码流"', 'style': '赛博朋克', 'resolution': '1280*720', 'num': 1}
[INFO][2025-04-15 16:33:38,322][views.py:1050]{'data': {'taskId': 1912061741546965225, 'primaryTaskId': '1912061741546965225'}, 'log_id': 1912061741546965225}
[INFO][2025-04-15 16:33:39,698][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:39,811][views.py:1030]{'refresh_token': '25.589ff78d564435a40c6714e61362c431.315360000.2060066019.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDFYVBw6Pp0E/xaUIcd+g3CWC7QNug5JNbXOs78HKWs6HG+3Q9Qx/jofUGEXOg//qBje6qMmH2+ozyziHq66Gr+pkBnk=', 'access_token': '24.7c5322ac5c5b4b1677b3e86cd1785c4b.2592000.1747298019.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '0a4aac16daab5455f2b5d297fb38e86e'}
[INFO][2025-04-15 16:33:40,700][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:40,809][views.py:1030]{'refresh_token': '25.3a1ff5eac4ca442467ccbd812b55325d.315360000.2060066020.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXvX6Tg2XpwdKVFSRrwKp2UKmXakLH9OoO8ID1oorSOcnxPI4bnXbnizgSWqyaL9HK2ylnIUMOj3PZRfxZ5KNaQ6d+0k=', 'access_token': '24.e061eaa955fc2d9aae0f5181f7ec2409.2592000.1747298020.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'e27799acfff93a67c81647a863084d77'}
[INFO][2025-04-15 16:33:41,694][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:41,793][views.py:1030]{'refresh_token': '25.3f0027d6754d8ecc8dde1b7f2cbd6a02.315360000.2060066021.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWBHIY/HkFXLUafDwxQX2qAQImyAyBgS3O9bj6ZOnydOmd+ggeLMiXPjxhAM+jLezeAjy5DHZta6C+VVG3Rjiw5hclrE=', 'access_token': '24.ca5e9ef2e0915b0d0a9510523d713321.2592000.1747298021.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'd332cc7bf3c99ef7ca4d65249d78ae4b'}
[INFO][2025-04-15 16:33:42,697][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:42,796][views.py:1030]{'refresh_token': '25.21e05a429e4e4f571f9a51ef86bacc16.315360000.2060066022.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDxRJ/QpprJFg9k11xRW24LbZOGZcbJ/XVphMs/SlGF63piqLhZ/+7IKVdB+O7rwKdEVy4eJyNbwMLKmn6rIuPWri/nM=', 'access_token': '24.40034e539bf84a36cba5e714d76f10f1.2592000.1747298022.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '5bff1b1848eb468448f383603a0eab85'}
[INFO][2025-04-15 16:33:43,696][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:43,808][views.py:1030]{'refresh_token': '25.627afcc3e53ab9303e33a266cc26a4e9.315360000.2060066023.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXvX6SOcnwr6FkU2klw8efP4DQNFKmC6+/3NdQX/b8Kf4W5VKF6SNbplNA5CKMtxNQVrVUSIZ6sNjEu3cVbM4ws9Sqbw=', 'access_token': '24.e067a9d676cd4dbff239905a43bf8c5c.2592000.1747298023.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '4f2504b95a29cab9ed603b3aa4a02be9'}
[INFO][2025-04-15 16:33:44,692][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:44,838][views.py:1030]{'refresh_token': '25.ad79cdf6b6dcb6409802a4df8c109bd4.315360000.2060066024.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCSCD4Ko5ZguEfg7BctBEtbJfvrgcYQWfjhkuuhkJHtgYA2EGi2H4nmt54LI1pO5fLeHk/pk8jS0y3wUiKYZ+AiPs6Js=', 'access_token': '24.2616efdf04b98e129b26adfe0c057ee8.2592000.1747298024.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '0f98decd622c4535e6618e9c42f13623'}
[INFO][2025-04-15 16:33:45,697][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:45,796][views.py:1030]{'refresh_token': '25.9893c18dfaca4812d5d0a37903a6ffb5.315360000.2060066025.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDcWxqby+PYujQIDdvN59sJMZMp5IwiEzsTlwUKvufUy5r69MB7BqZdn4uhns648Kd/mYfjK05tfZzlJMFi8hxqqYXC8=', 'access_token': '24.63bb6179ba92d8fba786e09dc4ad9172.2592000.1747298025.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'e4755e917ca534ecd6c2a1075a9efeb5'}
[INFO][2025-04-15 16:33:46,690][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:46,799][views.py:1030]{'refresh_token': '25.a9e7cf172eb1267db528aff825585a9e.315360000.2060066026.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXUaZHMb6ScJNOOsAvPPRsBT13ic+dVwSH061YvnPZZYXs0jO8mdM3pLvYdaSEtr59YvMHoqdnRmkyzWVHGzBTsM9VRM=', 'access_token': '24.f210db6def5061c9092bf4053ec215e1.2592000.1747298026.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '6515fd05b09de885cc6a3a21083f0e46'}
[INFO][2025-04-15 16:33:47,689][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:47,782][views.py:1030]{'refresh_token': '25.ce69c69e464094a9a9fc9eb86393d6ca.315360000.2060066027.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXvalgVHHci4OUvhfCfRDQOWYdSd1jeYxN+R6sPuAxCgrMzizuvgc++nfLysgh6638ks0BQqeiJU5HwYRDO1JueC9wmc=', 'access_token': '24.e3061735e57414007ca27369a8ea9008.2592000.1747298027.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '6f1848187d2986c0908a4f7fee03a350'}
[INFO][2025-04-15 16:33:48,691][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:48,781][views.py:1030]{'refresh_token': '25.f41b88355fb65a070413f5aca706c9bc.315360000.2060066028.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDce4IsfUPeHZwQXDKwrCMKgIBW3ISm8m9a5iokh0NbTkbjuROA2s9K8VZ92Ws8PU0v7czyaksQkzFZqHBJKgezWlxwA=', 'access_token': '24.61a36251541faa4063185208104f0db5.2592000.1747298028.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'c8519480ba35f30385f1f49b78a2e624'}
[INFO][2025-04-15 16:33:49,694][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:49,824][views.py:1030]{'refresh_token': '25.90b522876247b069bf9dd0d87f9a8f9a.315360000.2060066029.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCSCHo8oSebEJZLX/gQS0KCA6rjRerOhrvEq/mkd+TSMxivkdPNaKAsolwYBSdXEQvybgKXkO/DNPmiBVRewtgffWInI=', 'access_token': '24.265abc3f1e67e36b3e840ff4bb5becce.2592000.1747298029.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '2940bb583619373b1d11f24bdeff67e9'}
[INFO][2025-04-15 16:33:50,692][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061741546965225']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:33:50,793][views.py:1030]{'refresh_token': '25.95d3d2fc4974eafb14f9b0f2687f1016.315360000.2060066030.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDAZ8gZGeMboMILjYtiOvpKfYUvPPeJOKeiCqsAytw3zgFJmJgiiKOkTgbys2pwsS+hf5BVO/tlG9WLujki6uJ7SQeyU=', 'access_token': '24.73b89f61b39764cb81fc7629f6d24e1a.2592000.1747298030.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'cc84a33f3fde986478f1dca8c808f93b'}
[INFO][2025-04-15 16:33:51,319][middleware.py:13]Received GET request to /api/ai/image_agent/ from None with query params: <QueryDict: {'url': ['http://bj.bcebos.com/v1/ai-picture-creation/watermark/1_349872107_0_final.png?authorization=bce-auth-v1%2FALTAKBvI5HDpIAzJaklvFTUfAz%2F2025-04-15T08%3A33%3A50Z%2F2592000%2F%2Faff3c4e1c171b3a5d8436de15a04b48f859cf3484c7160059f80d67e7726de2e']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:03,121][middleware.py:13]Received POST request to /api/ai/draw/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:03,215][views.py:1030]{'refresh_token': '25.d986c95597b666164eabb34d7e5b7bed.315360000.2060066043.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDtczqzzKA20PlS9ZIsn6J2ToaEhiC9/EZ9bv7IVC/hZ9JC3IpsmSKMbphPB/8XE9xbKBnpV6hz37dQrh1o56ddiYbtE=', 'access_token': '24.5e1207d16bf68b4416336c5e52785798.2592000.1747298043.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '9dca762a5bdc946d530f5858f2e5703a'}
[INFO][2025-04-15 16:34:03,216][views.py:1037]https://aip.baidubce.com/rpc/2.0/wenxin/v1/basic/textToImage?access_token=24.5e1207d16bf68b4416336c5e52785798.2592000.1747298043.282335-106324455
[INFO][2025-04-15 16:34:03,217][views.py:1047]{'text': '"请绘制一幅赛博朋克风格的未来城市夜景：  前景：穿霓虹反光夹克的机械义体人正在雨中维修全息广告牌 中景：悬浮汽车在玻璃幕墙大厦间穿梭，楼体有汉字LED广告（需显示‘量子’二字） 背景：笼罩在粉色雾霾中的巨型企业金字塔总部 风格：银翼杀手式光影+日式赛博朋克细节 关键细节：广告牌必须显示可识别的二进制代码流"', 'style': '赛博朋克', 'resolution': '1280*720', 'num': 1}
[INFO][2025-04-15 16:34:03,591][views.py:1050]{'data': {'taskId': 1912061847818641147, 'primaryTaskId': '1912061847818641147'}, 'log_id': 1912061847818641147}
[INFO][2025-04-15 16:34:04,962][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:05,060][views.py:1030]{'refresh_token': '25.e3481d5a943da0a1302100b881fffe24.315360000.2060066045.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDFQfsplvQR9C46wiAkWzvv5dvHJ2NPk9lbfbyjlaX5/jBQZIlb6AApY7/E4DSW8PPVpZu+EY8eE3TcSEPJAn7YYCTtA=', 'access_token': '24.7a547df4917735f87915bdc8a7fd88bc.2592000.1747298045.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'f45f36714779713322ccf9b058dc6400'}
[INFO][2025-04-15 16:34:05,963][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:06,064][views.py:1030]{'refresh_token': '25.f2d10b395542dc5812037c4a3be38b5a.315360000.2060066046.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDFQSrC0piMNe24Jd5ZuDH37VKbwQZfcsz0D7Jo4UgSbXObN/pnkTIBUH6a/+ZmYnu76auw7NkZqQ2mfrPQ11HuTfhmI=', 'access_token': '24.7a869afff65f0574ab89d73b18ce258c.2592000.1747298046.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '18e64e0e747544ed94bd94b122ea544a'}
[INFO][2025-04-15 16:34:06,959][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:07,065][views.py:1030]{'refresh_token': '25.c6c5fbd0c415e1b75f9f60af1549c416.315360000.2060066047.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdD0Wnbf9PwxsI2nz8n5J76NJrM2rV5Wzr1r3aWZJFmFLuoqcdBCZo5SBQmZYoBGcmJewnZhko06J5A7TZqSiE0fy4/Xo=', 'access_token': '24.4ad8360fe86b7b1c9e10f298c99a6ba1.2592000.1747298047.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '88ffe08d7ad6f4d592668b5a86ac9df1'}
[INFO][2025-04-15 16:34:07,958][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:08,063][views.py:1030]{'refresh_token': '25.c9fc81315ea2eefa341b0413ae6ee51a.315360000.2060066048.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCSKIUIZa/LRRb30Y+oO0vseAY0j2mh6aMBKE6N9DlMMGNCRluVtGShsZWJbSLSNVi1mCOhqFL7sgYrwzNlEy/vQWnPQ=', 'access_token': '24.244aa76803b4e8d8905c71f89d260cee.2592000.1747298048.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '3a43b1e9d9188a9962e029d52fbcb0b4'}
[INFO][2025-04-15 16:34:08,963][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:09,059][views.py:1030]{'refresh_token': '25.055bbf65775c279a631625e8fe3a3d67.315360000.2060066049.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDcY3wwnogZQOSYNVGWIcUlLXGLq3kJ7x09gyy1UxP9jlTZlfAYJooP2AFFxiidBEvlO5wrZc8Opvb5IiBL6AfhfmPJU=', 'access_token': '24.60006bcb5edc7f0c041ae37893dbe17d.2592000.1747298049.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '2ced97a3fe8f907ed3caad7ee5bb1a01'}
[INFO][2025-04-15 16:34:09,963][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:10,066][views.py:1030]{'refresh_token': '25.0033daafc189c6a31ea0885cedcb1208.315360000.2060066050.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXvNyeCR82aadZoOcJTm7aGedY80a5XebxB5MslrYch0Uge6BH+cVvVw6F78eNgDuO54yc/5Fj8HSso4rERI+jPSXtLo=', 'access_token': '24.e65a0b313da64ac39d9e42c953efb096.2592000.1747298050.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '13c69be5ac83180c203e7f7f4d642c3e'}
[INFO][2025-04-15 16:34:10,960][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:11,058][views.py:1030]{'refresh_token': '25.cee865e8b801aa51cce8c308044be003.315360000.2060066051.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWu2YFWCRR0ymWNYA/hnOVCgj1j9LZvTK6RxkIvslTgb4U/UBgPIPQW+tEi8XKIufzMLrnQnMFAEVGXjdDhH0I0E6grg=', 'access_token': '24.a1f869139f579c29034a07582d4b7997.2592000.1747298051.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '7fd47b96893639558b3658502349c963'}
[INFO][2025-04-15 16:34:11,957][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:12,064][views.py:1030]{'refresh_token': '25.5446a05a728716e92b958bcd365d6712.315360000.2060066052.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWBXCbpk9WPVFmQkt36FmdlyVUs4RZOllNag3j1NDEspFYZjVuoQ66NQhW2fasWhCI9VJpn26aZfVJpU+2FOQBJzm8xA=', 'access_token': '24.ced32a7ed78d6e6d6a461a1e330c37ca.2592000.1747298052.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '8a6a0c33350a3f0cc30d21993f508bd3'}
[INFO][2025-04-15 16:34:12,961][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:13,060][views.py:1030]{'refresh_token': '25.018b37bb906a5e6c83551105e08b7942.315360000.2060066053.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWr0hgm3KdpcDaVKSPbcRlE4BhYRBvvgqsdzCWBNLw4B4I0bTBiSDACNZ3Vu9wlBVjJRubvvqlb1CBv87wimSaWk5kQA=', 'access_token': '24.aa4dffa605b2ed333c4d6cb1cc35406e.2592000.1747298053.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '07fd61d0f9117ad82e879411c70d35ae'}
[INFO][2025-04-15 16:34:13,959][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:14,059][views.py:1030]{'refresh_token': '25.8657163cf93fdeb0748c62371c104ff9.315360000.2060066054.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDoHOwKfMJ/IcrRDJUC2911Ky2YmFrQCWllhTv8cVY4TWAkdYRFLbztT5uZtwkRgcVdI265RPnP9/tG6WVvZpBOda77g=', 'access_token': '24.53351a711150fdb29501b8f80523a976.2592000.1747298054.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'd9be4e0deacccd7728be4cab57f88dfe'}
[INFO][2025-04-15 16:34:14,960][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:15,064][views.py:1030]{'refresh_token': '25.f74b8948c5af46d0c7d6dbbf5547708c.315360000.2060066055.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCPAygAYrUGsIfe159dppUh1wc7TEBT/WzqfdIA8VJs+VuF8aAXBbH+Mbxolr6VhjJj2xIyB56XgrYZPzG+Luq5NLQEY=', 'access_token': '24.34a5e730b719df4647236d5f0e8e2b3e.2592000.1747298055.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'd863ed0e861f3c0a5e804d1252ac9e4b'}
[INFO][2025-04-15 16:34:15,963][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:16,083][views.py:1030]{'refresh_token': '25.555065e089101c8d26475d92182a12a5.315360000.2060066056.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCymNIikMTgF+GtsWrhbvLLl3QGS082n05BVyB3HszZ8hBVaUMLwksKH8lli2M1cG/3wvSwSKxPVXd4o5TUcL86E3fnc=', 'access_token': '24.01b7343812c369fa7727c4ad12958bff.2592000.1747298056.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'a4ea8101e17ceb7aa20e711b9f472004'}
[INFO][2025-04-15 16:34:16,963][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912061847818641147']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:34:17,074][views.py:1030]{'refresh_token': '25.90acb76021f07839c031b3ff98050987.315360000.2060066057.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCPXceqfFueh+VVeoYo51lW44v9UeR7dCXDx+wUqdIWFrcHLUqafRSl5A6k8wjlyApK9je6JEkSMAMS2p1X6zpPGVgJs=', 'access_token': '24.316626f53396a26c69d5363b6bf21028.2592000.1747298057.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '489a2200caec4fb35a275f4b06bbf564'}
[INFO][2025-04-15 16:34:17,622][middleware.py:13]Received GET request to /api/ai/image_agent/ from None with query params: <QueryDict: {'url': ['http://bj.bcebos.com/v1/ai-picture-creation/watermark/1_349872121_0_final.png?authorization=bce-auth-v1%2FALTAKBvI5HDpIAzJaklvFTUfAz%2F2025-04-15T08%3A34%3A16Z%2F2592000%2F%2F081d9b6c3d5eb499ebcf428632a84a71c4046decaa8a6bfa4ca225207b9f2560']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:35:51,598][middleware.py:13]Received POST request to /api/ai/draw/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:35:51,700][views.py:1030]{'refresh_token': '25.e0c59b6d483c07544c04db8a64405a4c.315360000.2060066151.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdD0BDalKvgeS+eTWMiG213T++ZxCg1hVwJIsOmA1LF8oeHLcU1xZYzkWpqnZB6O77ameASGVam+dcHlwBuJg2zn8gxVg=', 'access_token': '24.4dfbe74492d675ebbb73b41b35827586.2592000.1747298151.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '0e16b66e30271d1106dfe35ebda8e60f'}
[INFO][2025-04-15 16:35:51,701][views.py:1037]https://aip.baidubce.com/rpc/2.0/wenxin/v1/basic/textToImage?access_token=24.4dfbe74492d675ebbb73b41b35827586.2592000.1747298151.282335-106324455
[INFO][2025-04-15 16:35:51,701][views.py:1047]{'text': '一张白纸上画\u200b\u200b红色正五边形\u200b\u200b，背景纯白，线条必须精确笔直', 'style': '写实风格', 'resolution': '1280*720', 'num': 1}
[INFO][2025-04-15 16:35:52,090][views.py:1050]{'data': {'taskId': 1912062302053389221, 'primaryTaskId': '1912062302053389221'}, 'log_id': 1912062302053389221}
[INFO][2025-04-15 16:35:53,463][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062302053389221']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:35:53,573][views.py:1030]{'refresh_token': '25.ceca8dc03c1a0b948383c43e0af02718.315360000.2060066153.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWBOmSSCyD2hImrNJdt4LYnyyQGgVN53JequAAGy0lHzbKvPj/2aZ6n6aC25b9dLBYFc1hkrbaZlDMVsgJFZeZS5bmaY=', 'access_token': '24.cc4f2eb9661c962f64795fa1615552e1.2592000.1747298153.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '5b75760a8c3208585d36616e7e6e0f31'}
[INFO][2025-04-15 16:35:54,456][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062302053389221']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:35:54,557][views.py:1030]{'refresh_token': '25.3725987e7396fed430b80d9f7bef3344.315360000.2060066154.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXqEPUEvRIF0gnaFvnvvg4YB11zfHZNkBm4n7xP5ZD+zB5xO/6uwvDR7bm9tGbtVrdQMSkpAtC0M+Fx14UHnHJ0BT4tg=', 'access_token': '24.edd55f5baba7d1b48c4f4b7840f4abac.2592000.1747298154.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '19465aad0098e0dcc27d1950fc95cc8f'}
[INFO][2025-04-15 16:35:55,455][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062302053389221']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:35:55,574][views.py:1030]{'refresh_token': '25.9506a60594535ffd7ff5e376ea8c6500.315360000.2060066155.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXqOkpcoYDgqbBe689oz29eiroEfYZMBmBflBwpPUIOQKVhJf7VWP4/byoWpkGiJzkB6BfqD8cnEnVDDfEd1tVuVao2w=', 'access_token': '24.ef7dc56e762e1bf2d5e4235c7aed763b.2592000.1747298155.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'efa6ab927ec412671bba9d9c2cbe7f9d'}
[INFO][2025-04-15 16:35:56,460][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062302053389221']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:35:56,578][views.py:1030]{'refresh_token': '25.77dacf4286b41a55a9b1ef90e82e9aae.315360000.2060066156.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdA5LYE9ozGbLlba1q7+ZQb19jV6Lw6GxTTXn12sa72oHa1lnshHwTTK7Rv2oWsXTMuiC3nT8JJ6hxV152/+J86oi90Dw=', 'access_token': '24.88a1e36963a00623772e3b83967d1980.2592000.1747298156.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'ef9de289690aef24b315084b8c835818'}
[INFO][2025-04-15 16:35:57,455][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062302053389221']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:35:57,550][views.py:1030]{'refresh_token': '25.5154c0aff28cba3ee6d9167aa1ee3cd1.315360000.2060066157.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCXdIMIjKcT140ccI4bOO/j/S4/yxN1/i8VreXCSweUX0vAZOtjlULD0eqv7znZ2vOS9S2+R+RO0IHzJFYcJfeK+sNjU=', 'access_token': '24.2ac0175d4cc64f77e9a9eeb53739f4ff.2592000.1747298157.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '88c9acc538b8cce1c30ce1ad42157897'}
[INFO][2025-04-15 16:35:58,458][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062302053389221']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:35:58,559][views.py:1030]{'refresh_token': '25.d6bc120ea56285cc09b83e0a3deeb698.315360000.2060066158.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCrCotgNZkGGikfMs8XtTWHepQONpafp3H4zHbqba5VY18GGx/3IpI62689agh91iVtS6iQWZybObIrcjhSgKjNw9SYk=', 'access_token': '24.14ed7e7f14c66995dc6e2731c153ab56.2592000.1747298158.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '6474227998565f2e430f5deb2c398c19'}
[INFO][2025-04-15 16:35:59,455][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062302053389221']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:35:59,568][views.py:1030]{'refresh_token': '25.dcb189cd5e719ff1c7e4c033ca2efc4e.315360000.2060066159.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdC3rA1QvlLbeElRQBfaOo6vQ591Wc3i/Rh8/mFE60CnhZI4gbgFZTCgDw20TYQ4f8sZ0vjOJtHcjLF3YRCXvQj69EVy0=', 'access_token': '24.0b85b0752390fe1054f7fe96c68b31c9.2592000.1747298159.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '22def8b35578d72348b40745d683e3ef'}
[INFO][2025-04-15 16:36:00,453][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062302053389221']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:36:00,543][views.py:1030]{'refresh_token': '25.cb2753c8ccfa318c91e1c7faefb19d04.315360000.2060066160.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCKWyDTOFv1SqX3YQ2j5opqFWet3zQVsIl5vANfy1Vd53ho1aoGgF0jHwuh20WWiJ3wjEZXHysvwjtykVLaf8x2RcFSw=', 'access_token': '24.3a3707755305766d0d74302d13528b7c.2592000.1747298160.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '40909efb552e6c30e742ac29da17ce41'}
[INFO][2025-04-15 16:36:01,455][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062302053389221']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:36:01,567][views.py:1030]{'refresh_token': '25.dd40f55fcd5d3c622fd6bd5c5025744d.315360000.2060066161.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCPHfaCOZzY8c1JosL0tXrjWAT3vYW8u5uA/9PRLGA47dfHu7czEDyJezagFW+Xv7byi1yGfisPHi/u6c4kG/GnimyXk=', 'access_token': '24.3511293bd6e85a301b26c5b63ea08fe8.2592000.1747298161.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '9dfd37974a85d2623fe6d6cf67012c36'}
[INFO][2025-04-15 16:36:02,455][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062302053389221']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:36:02,572][views.py:1030]{'refresh_token': '25.b661d1e132f4d6811b9fcecc97117621.315360000.2060066162.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdAqZ9eOCKT1sRTkvh+A0I/f7eNvvrJbdDirG+AQftVXhXJ76MSldEYE9+cmd1XAuL64OAp5t1inUKOHKAZJ/ZaK47I0I=', 'access_token': '24.9d2082e9db93f3b98ab06de9bcd44773.2592000.1747298162.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '060507ce07c15a5be39bb86934bf7501'}
[INFO][2025-04-15 16:36:03,108][middleware.py:13]Received GET request to /api/ai/image_agent/ from None with query params: <QueryDict: {'url': ['http://bj.bcebos.com/v1/ai-picture-creation/watermark/1_349872198_0_final.png?authorization=bce-auth-v1%2FALTAKBvI5HDpIAzJaklvFTUfAz%2F2025-04-15T08%3A36%3A02Z%2F2592000%2F%2F7161377e7e4585226e2c43189050b2bd3521347773f13674d6e4cb63dcbe804b']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:10,102][middleware.py:13]Received POST request to /api/ai/draw/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:10,219][views.py:1030]{'refresh_token': '25.44f36aa0f23fcc6c169eb4e19855bee3.315360000.2060066230.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdA8lNrKmexAbysnVLmY35yVUY+Hl8Br8cUTK/TQ0sLesvHJappr1OMTWlvGNrcZBnAeIZk4AqSorjkFntbf01NAdsd0M=', 'access_token': '24.8c81f666d5242319f631288df1712498.2592000.1747298230.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '8d1f18b4cb59fcd6c955120907999595'}
[INFO][2025-04-15 16:37:10,219][views.py:1037]https://aip.baidubce.com/rpc/2.0/wenxin/v1/basic/textToImage?access_token=24.8c81f666d5242319f631288df1712498.2592000.1747298230.282335-106324455
[INFO][2025-04-15 16:37:10,219][views.py:1047]{'text': '特写镜头下的生锈铁链，需清晰可见氧化层剥落痕迹与金属反光', 'style': '写实风格', 'resolution': '1280*720', 'num': 1}
[INFO][2025-04-15 16:37:10,653][views.py:1050]{'data': {'taskId': 1912062631177957826, 'primaryTaskId': '1912062631177957826'}, 'log_id': 1912062631177957826}
[INFO][2025-04-15 16:37:12,030][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:12,135][views.py:1030]{'refresh_token': '25.db93c4bd0480a843852c0071dd9e271c.315360000.2060066232.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWWlfyhY1moFofFqYZetRBsnwopeFjTNIPkOqf2jXhbrQLqmxVibwy6p35cNW9vR64bk38mx1fHFiCoLzRNIeoJvYsuI=', 'access_token': '24.b34e7022dda8f8ea586ef084a188bbd9.2592000.1747298232.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'f75e34e504cdea80170c8959004c4b7b'}
[INFO][2025-04-15 16:37:13,028][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:13,128][views.py:1030]{'refresh_token': '25.b7abaab5a82feab13cc1f85d817bb2d1.315360000.2060066233.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWW6LXHrwSelqf53XILYdi91jpDInoKfeGh67yGirUB7jDs8YaL2S61GWXi+TXrhgw0z+iejMKx0GDyegwaJ2X7MVb48=', 'access_token': '24.b478c9879b6f633633c428372ffe628c.2592000.1747298233.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'b6600f03cca091ecb2a08d913f263431'}
[INFO][2025-04-15 16:37:14,028][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:14,134][views.py:1030]{'refresh_token': '25.657c39f633eb7b0d290b2b47c2e1a7e8.315360000.2060066234.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXveLP3eF+jFfY+s39n4QbZYPWHwnX0yATylMunBuw3DWDAdjWh3qx+p8BzIV0LWMwDdNjjf1yM0NZutpn/wTSMQr9JQ=', 'access_token': '24.e275f977cb26a057ea080d05dbb1ed36.2592000.1747298234.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '29d98f11ad55d99719429cc3a86b21b4'}
[INFO][2025-04-15 16:37:15,028][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:15,141][views.py:1030]{'refresh_token': '25.b3f29eb0f5390968595036c5b5013ff3.315360000.2060066235.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWEfSnAJYNmSDmr+a5LfLoit6YhsEmH4CPmtT5ZIPECQugH4M5pKS179dioCXExr8029GhZwLLl3CizvXkjEm9nNpvqg=', 'access_token': '24.c73ef2bb59a46384324b79f5f63a25c1.2592000.1747298235.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '5a27c10860780cede690d9fc3705f3dc'}
[INFO][2025-04-15 16:37:16,027][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:16,131][views.py:1030]{'refresh_token': '25.c3cadb538ca954b068f3f08442ef6c89.315360000.2060066236.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCypmD2ZGgI7wV0Y8C+9Ky7zO1yOHLTQN9maGEhjvWPKaDGCTwxUyXFr7Abtt9CrpqQ2r+3jDf/H3KLG+QAXe/45/wdo=', 'access_token': '24.0298d464f8e1fba35eb05adf7d57d079.2592000.1747298236.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'a5e1fc6c02dcf10859d2d6700aa85be0'}
[INFO][2025-04-15 16:37:17,028][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:17,136][views.py:1030]{'refresh_token': '25.a447b171c828d7578d94e69f66ae8a73.315360000.2060066237.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdD0dlj0UCnyv7pLnQhfajLFz2UMRsnwafR1apx4BFJe/EftZR8wz3XZtvSOxk4DuyEtKdQxQ432Tkf6mpBKS2s8+aeCY=', 'access_token': '24.4c0e1b7523ab69c6d0989e630f0e3c0e.2592000.1747298237.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '4f53453d4f95d685ef8dcf632a14da75'}
[INFO][2025-04-15 16:37:18,029][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:18,132][views.py:1030]{'refresh_token': '25.b2f713ac97c835f8428c71b699eed12c.315360000.2060066238.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCrCuHwfXWMwAIFMgk/JrPWns+f92Xblu6O9Dqco59BuRabykC/RK5H8GJnxHvUb5WGYHPLTXfmdEDDVKx9y5dFMaYfw=', 'access_token': '24.14c998d5df823e548be559860cbfc3d7.2592000.1747298238.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '5f56d7c91f4cff0bd1ed37940c3462f9'}
[INFO][2025-04-15 16:37:19,028][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:19,138][views.py:1030]{'refresh_token': '25.7e8e83d289882b3e2c94845c9e13d103.315360000.2060066239.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDoHIkXfPjOgwucWpEZC/pP216prB4PML1BkaMoVlHzEwgZqYeWWNPbOWt9n2k1JHanfikTayH3SoNfHe9kjvYGD2tI8=', 'access_token': '24.5353a69837729e7cf07ded42eb6062dd.2592000.1747298239.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'b9da7fd503195e9ddaaa48f4a80b158b'}
[INFO][2025-04-15 16:37:20,028][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:20,123][views.py:1030]{'refresh_token': '25.5af8d3af485334a0972ecc6b21dbe534.315360000.2060066240.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdA86YOxpmVp8VhLlH3wxmSE9V4DSwtSKu238pfIkbwwbFLt7sFDET5UiSxICo8LohnAaqjo0lvDYxj37Q9pdUXK7tPaY=', 'access_token': '24.8d703fca9d13352bb43cf38546c98300.2592000.1747298240.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '7022d5a84965e910f831abc55ad3e06c'}
[INFO][2025-04-15 16:37:21,028][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:21,135][views.py:1030]{'refresh_token': '25.613fb535ea5ffd495a16149a8d55b43c.315360000.2060066241.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWr0ghjjXWfAKc9JsG+JMNolyOWkCN8FSie/7hHxJgyxILhU11Rb+1Io13K+T+QrvtrPlNy96MELv7H7DDaWEKq7fuY8=', 'access_token': '24.aa5f6a86cdf793e9e5b812722ab5c954.2592000.1747298241.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'bbbf550be2b369edd8f66af6006440b5'}
[INFO][2025-04-15 16:37:22,027][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:22,122][views.py:1030]{'refresh_token': '25.7b8c6a6b7841e869c64888f5332f234b.315360000.2060066242.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdX+s/mliJrgeyjU63Sq7+b6MEbY4cKeTJhBmLxpfnvPXhPEoFu0ZbhLfHascetCxlHyW8orNo1DEmrLjoMSA9SR/U8RQ=', 'access_token': '24.d19b2734de21f6c2b451bea8c94dc634.2592000.1747298242.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'b36178559e67f2008c1e573978608ec3'}
[INFO][2025-04-15 16:37:23,028][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:23,137][views.py:1030]{'refresh_token': '25.a6e43507338c13cd6ee43cd6fd99f7ac.315360000.2060066243.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdAvo34kLW0ovIB2KkPANg69OsuvbksP9BXSjHc3KmlaRUBL1YgcSmPQ97Nt9OengMZy+JN3smGv7KUgZonuAIz1MvOzo=', 'access_token': '24.98515e943c281729452b1a1d14647161.2592000.1747298243.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '968d698daa6ac289974c1f73bb5263e2'}
[INFO][2025-04-15 16:37:24,028][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:24,129][views.py:1030]{'refresh_token': '25.bea28035a4854a5d6f9c8e5527fd7553.315360000.2060066244.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXRCkQ6u2HhB2rpQBxLbzjpEUBWRV/XfDZgWqv4WJEwQUSLheFLBCRItXCbiFMjeiWtxFngSRoZPNO2T3zvOzVR7TU2M=', 'access_token': '24.fd72c6888169ad4534cc8fc81f3c15d5.2592000.1747298244.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'e7f0497cb1bbdcba5e2701d48f64187d'}
[INFO][2025-04-15 16:37:25,028][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062631177957826']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:37:25,120][views.py:1030]{'refresh_token': '25.51ca9cf4a8afbf3008d2fae74e050ee6.315360000.2060066245.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXv15hH0rXVwiQM+xBUvgMBUQI4IV1JhTl/HX+CMMxE9YVc2L5WmaHVAHrWRmRMqhfSmTT+rADa6EHkxADpAc6cVI0Q0=', 'access_token': '24.e8d0413d85699142478f4aee9e9d37ee.2592000.1747298245.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '44ffabb29f337e7fb4af60fd34666fcc'}
[INFO][2025-04-15 16:37:25,673][middleware.py:13]Received GET request to /api/ai/image_agent/ from None with query params: <QueryDict: {'url': ['http://bj.bcebos.com/v1/ai-picture-creation/watermark/1_349872259_0_final.png?authorization=bce-auth-v1%2FALTAKBvI5HDpIAzJaklvFTUfAz%2F2025-04-15T08%3A37%3A24Z%2F2592000%2F%2F49a6c3a7eb223e32acf2c31e603afafd4368aa0f3b9847d09de40c63366b6ea5']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:27,815][middleware.py:13]Received POST request to /api/ai/draw/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:27,925][views.py:1030]{'refresh_token': '25.11348d11bef59f2d7e408921c4db57d7.315360000.2060066307.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWEmZ9+RDDzrrajWTRwJzcJCtFI7JXtQaq+NY9xgzBJJYklpPSUNK5HzwtavUa8YmTrPzPZee7A/r5mkUJjCbbPeyxCQ=', 'access_token': '24.c93c55b4dc3d1484d550ac5cf1b55738.2592000.1747298307.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '4a77db0cb2769e6142cb8d674bdef0ec'}
[INFO][2025-04-15 16:38:27,925][views.py:1037]https://aip.baidubce.com/rpc/2.0/wenxin/v1/basic/textToImage?access_token=24.c93c55b4dc3d1484d550ac5cf1b55738.2592000.1747298307.282335-106324455
[INFO][2025-04-15 16:38:27,926][views.py:1047]{'text': '梵高《星月夜》风格的水瓶，笔触需呈现漩涡状厚涂颜料效果', 'style': '油画', 'resolution': '1280*720', 'num': 1}
[INFO][2025-04-15 16:38:28,352][views.py:1050]{'data': {'taskId': 1912062958612175620, 'primaryTaskId': '1912062958612175620'}, 'log_id': 1912062958612175620}
[INFO][2025-04-15 16:38:29,722][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:29,829][views.py:1030]{'refresh_token': '25.c3f36ccd40305da8000999b36ae6c0be.315360000.2060066309.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdA5LcGqL8gBtLA9icTtA2JOLdOWm3mqQsLAsPFD4IZ8bv8UppYRVnt3CUwzwGGsnIzbPU9On6Cp2UZ+OlZAffqR7/GL4=', 'access_token': '24.88e839a060071747dae524c654f6caaa.2592000.1747298309.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'a248ba07ce19a9a511a2dbbd486b4079'}
[INFO][2025-04-15 16:38:30,724][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:30,823][views.py:1030]{'refresh_token': '25.38c90125d4dedf743e3e24167a08db6e.315360000.2060066310.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXvSjh9EPJ4KGNWF+FO5Rseek38IVOS82tfk2Qof5ETK/6dsTcBvuv0PGXTpfBrMPiFAhvJRX8O65t8UDXhwTKA6YuI0=', 'access_token': '24.e1ccd54062d53fad147c5bb0ff436ba9.2592000.1747298310.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '8b1cc5a0c38225de561a8abac12ac3a7'}
[INFO][2025-04-15 16:38:31,724][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:31,832][views.py:1030]{'refresh_token': '25.4c8d7cdae7a7085dfd7b04bb8340016d.315360000.2060066311.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDcG3WK80DY/UcCueN732sc/9Wi7mSTwJUQF3XOus9PnwCTqNPnTsa2OPott/fz9d2jGsxvlESztWYUzGNysxiH4EcAc=', 'access_token': '24.6783261d57d82f1fe6526dd2f1d6b724.2592000.1747298311.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '2244fc0a0efe86fea4b0560896fc572c'}
[INFO][2025-04-15 16:38:32,724][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:32,843][views.py:1030]{'refresh_token': '25.349f82b3232cc068c4ca578b15ba240d.315360000.2060066312.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdWr1zWpmPuziT4rlboQkSXqpuor0ddPalg2l3QDH3bzEmQFExzf7+fZpBk9EBKt8yjBXi6pmyOSEOMpnhxI0ULHKDVTI=', 'access_token': '24.aaf7a193f3723a2df711bf50358128de.2592000.1747298312.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '768d29a53c441654a9e08c8a7c668461'}
[INFO][2025-04-15 16:38:33,724][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:33,835][views.py:1030]{'refresh_token': '25.e7c41348b0ba92783394d290cb094630.315360000.2060066313.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDoRygTELyigT9hir+siIVXYYCBP7WC+njw3Ps4auhTlKaF7cRdA2m0mQMjuXI5S0rBnDjgaBdU95BlrBAv0b7S8zi2A=', 'access_token': '24.563a17137966bff90158bd7ba45aacfa.2592000.1747298313.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '5f4543f6e31d443a31071cfeea826c2c'}
[INFO][2025-04-15 16:38:34,723][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:34,839][views.py:1030]{'refresh_token': '25.3c09149c0e8f3919b6d22bbf9fd650b5.315360000.2060066314.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCuUwqo3WQ1GoUNDcwBtkwCnILSB6oec5Z+lQU6g+1hh5QB7l/9mIaTMz6kQBinWyHbWWCC/F4UJB3RAw+ghTugMMCdU=', 'access_token': '24.1a3aed0d15b033bf25571ce8dfef08cf.2592000.1747298314.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'a0b91a0a17f04db7d49d04ed7f1145e1'}
[INFO][2025-04-15 16:38:35,723][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:35,834][views.py:1030]{'refresh_token': '25.bdb5f85b3e94cf33b9ec1fa0b8bfdc6d.315360000.2060066315.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCuLZ1ZQLtJEKkzfiJGC7bCUO4VP/mCPPRuo4dwrAvuGDmLIbn+/eUJb0JWaIDfloRNI/NQBR8sahMef3mOQV3wML9sU=', 'access_token': '24.1fb53c3f75d8d9a5e76f26c7f93655d9.2592000.1747298315.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'fc7d1fc94069a5304e754bc46a1f127b'}
[INFO][2025-04-15 16:38:36,724][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:36,825][views.py:1030]{'refresh_token': '25.884bad1200b9682a2d30e3d05f208c3f.315360000.2060066316.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCrLzKTRBFROP2NdK7Wuem68zSIcRHB3tkgN1ZT1GP2d5z9YpyFe0PDWgzL915ChriPqyK6voUvHpAc8x5sdcycDm1Rk=', 'access_token': '24.162a257dafdd1dcd9f3526a5d8414a55.2592000.1747298316.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '41306fccfad94d39ba74a22556754862'}
[INFO][2025-04-15 16:38:37,725][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:37,827][views.py:1030]{'refresh_token': '25.015797322e94ff1fcb6293dafc819ae5.315360000.2060066317.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDcL4VHvn47ui452U/ZFOakW0oO/r/r7xm/VKhxDyn1hae1OTN/fQh0iKiNKNcHitKD92+c5nvkydeQv+kRUYs73VH9I=', 'access_token': '24.646695906ab85b283eae58ef76286d7b.2592000.1747298317.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '5dd6b92ec1b956d0686ffcbdaeccde0a'}
[INFO][2025-04-15 16:38:38,724][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:38,834][views.py:1030]{'refresh_token': '25.8dcae8b9b8c4ae82cf4a36d3cb2a79cb.315360000.2060066318.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCy/ZZYZ6XNdzvqmOr9IaJFmYZD3HIzo5oRbcQTTQqu66TIBjHmy5BnSjoC/IzPHg6x39KNjw83XQ9xqKG4lO6LLmWco=', 'access_token': '24.078cf3634b99db24ace14a602ca3f77c.2592000.1747298318.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '2404ca47369c82cd79f4d4a7551a696f'}
[INFO][2025-04-15 16:38:39,724][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:39,826][views.py:1030]{'refresh_token': '25.bad1255793df2a1580a79f7b89e7a544.315360000.2060066319.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdXUcHQhtAgiB8t/p+0AHKVAfJ4Wx9cQM7DpYTe+sc/7U8ns8edbiFGtrqFnhmDvXjU9tVWGWLtTbL82GhTO40voLMmlU=', 'access_token': '24.f3bacf19aa834e75f50d043b191f9295.2592000.1747298319.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': '02bbe8201eb5a52ebaa04699f3a661b1'}
[INFO][2025-04-15 16:38:40,724][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:40,829][views.py:1030]{'refresh_token': '25.999920ed1dddd42491c3d9b133a8cb19.315360000.2060066320.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdDoGZF83/pdkJIs+7cJt6exIRUGGSYCVlhWC6oiis8LQCQfDG40c0TifYYhVoSuxMlsj7e+4CyZ5nfsdQDgAMt1pco1g=', 'access_token': '24.53db34303a5257602d0f0ed21e6f153c.2592000.1747298320.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'b25053608166caa0f2867022250ee803'}
[INFO][2025-04-15 16:38:41,723][middleware.py:13]Received GET request to /api/ai/draw/ from None with query params: <QueryDict: {'taskId': ['1912062958612175620']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:38:41,840][views.py:1030]{'refresh_token': '25.16cc8bf7a1b13c2bce1d8bbce8085046.315360000.2060066321.282335-106324455', 'expires_in': 2592000, 'session_key': '9mzdCKDwFzdBgGOHpH7b3wUXMNuH72ig+CRi9foZ6kJrVIJ/Gsp1/QQyU0D4FIALuHokQuR5QNtZHIdtESSiBButEJsK1Oo=', 'access_token': '24.3de67468eb632c01980374bf1484fa09.2592000.1747298321.282335-106324455', 'scope': 'public brain_all_scope ai_custom_pro_apple ai_custom_testface1 ai_custom_kouzhaorenlianshibie ai_custom_chongwugou brain_rpc_ernievilg_v2 brain_ttv_material brain_rpc_wenxin_basic brain_rpc_wenxin_extreme wise_adapt lebo_resource_base lightservice_public hetu_basic lightcms_map_poi kaidian_kaidian ApsMisTest_Test权限 vis-classify_flower lpq_开放 cop_helloScope ApsMis_fangdi_permission smartapp_snsapi_base smartapp_mapp_dev_manage iop_autocar oauth_tp_app smartapp_smart_game_openapi oauth_sessionkey smartapp_swanid_verify smartapp_opensource_openapi smartapp_opensource_recapi fake_face_detect_开放Scope vis-ocr_虚拟人物助理 idl-video_虚拟人物助理 smartapp_component smartapp_search_plugin avatar_video_test b2b_tp_openapi b2b_tp_openapi_online smartapp_gov_aladin_to_xcx', 'session_secret': 'bcf02da7c113d56e4669a535b0720f7d'}
[INFO][2025-04-15 16:38:42,376][middleware.py:13]Received GET request to /api/ai/image_agent/ from None with query params: <QueryDict: {'url': ['http://bj.bcebos.com/v1/ai-picture-creation/watermark/1_349872373_0_final.png?authorization=bce-auth-v1%2FALTAKBvI5HDpIAzJaklvFTUfAz%2F2025-04-15T08%3A38%3A40Z%2F2592000%2F%2Fbefabadcfcf7c9ac540a12661cce24ddf5947d749d217fe7aa1eeb84496e4b09']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:45:10,915][middleware.py:13]Received POST request to /api/ai/generate-with-context/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'prompt': ['生成一个有关程序员穿越到古代的故事大纲'], 'user_text': ['']}>
[INFO][2025-04-15 16:45:29,140][middleware.py:13]Received POST request to /api/ai/idphoto/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'color': ['蓝色']}>
[INFO][2025-04-15 16:47:15,963][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:48:18,142][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:49:44,819][middleware.py:13]Received GET request to /api/user/email/ from None with query params: <QueryDict: {'email': ['mqqqyyy@163.com']}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:50:13,129][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:50:24,670][middleware.py:13]Received POST request to /api/user/email/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:50:25,078][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:51:01,637][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:52:14,727][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:52:15,176][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:52:43,735][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:52:43,841][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:52:44,206][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:52:44,584][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:52:44,734][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 16:52:51,216][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 16:52:51,382][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:01:16,030][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:01:49,962][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:02:48,900][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:02:53,307][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:07:06,488][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:09:12,873][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:11:24,906][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:13:04,315][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:18:42,348][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:23:55,204][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:23:55,341][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:23:56,231][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:23:56,385][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:24:50,431][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:24:50,758][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:24:50,933][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:24:51,098][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:24:57,501][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:24:57,666][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:25:08,446][middleware.py:13]Received POST request to /api/ai/generate-with-context/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'prompt': ['你好，我叫道宣'], 'user_text': ['最后一封信\r\n\r\n亲爱的，很遗憾\r\n\r\n以这种方式跟你告别。当你看到这封信的时候，我已经离开了这个城市。']}>
[INFO][2025-04-15 17:25:54,340][middleware.py:13]Received POST request to /api/ai/chat/new/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:25:54,795][middleware.py:13]Received POST request to /api/ai/chat/chat/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:25:54,934][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:32:06,652][middleware.py:13]Received POST request to /api/ai/chat/chat/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:32:06,851][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:32:32,958][middleware.py:13]Received POST request to /api/ai/chat/chat/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:32:33,153][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:33:32,029][middleware.py:13]Received POST request to /api/ai/chat/chat/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:33:32,313][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:33:52,319][middleware.py:13]Received POST request to /api/ai/chat/chat/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:33:52,555][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:34:30,908][middleware.py:13]Received POST request to /api/ai/chat/chat/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:34:31,104][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:34:50,815][middleware.py:13]Received POST request to /api/ai/chat/chat/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:34:51,016][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:35:12,735][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:35:12,740][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:35:13,060][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:35:13,067][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:35:13,273][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:35:13,448][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:36:01,485][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:36:01,638][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:36:04,302][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:36:04,822][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:36:23,968][middleware.py:13]Received POST request to /api/ai/search/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:39:38,677][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:39:38,680][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:39:38,854][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:39:38,857][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:39:39,026][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:39:39,050][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:39:39,107][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:39:39,143][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:39:44,246][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:39:44,414][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:40:35,069][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:40:35,083][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:40:35,091][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:40:35,291][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:40:35,343][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:40:35,361][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:40:37,289][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:40:37,438][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:44:44,641][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:44:44,644][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:44:44,824][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:44:44,922][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:44:44,981][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:44:45,173][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:45:20,947][middleware.py:13]Received POST request to /api/ai/ocr/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:49:53,646][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:49:53,648][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:49:53,827][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:49:53,936][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:49:54,007][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:49:54,147][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:50:06,456][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:50:06,843][middleware.py:13]Received GET request to /media/avatar/5cf0b8f6acb15c6051e57e31503fb3d3ad945f96.jpg from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:50:40,359][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:50:40,579][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:51:34,290][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:51:34,595][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:52:14,997][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:52:15,258][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:52:49,281][middleware.py:13]Received POST request to /api/ai/document/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:52:49,374][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:52:49,643][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:53:35,534][middleware.py:13]Received POST request to /api/ai/ocr/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:53:35,637][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:53:35,897][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:53:45,294][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:53:45,525][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:53:47,322][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:53:47,470][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:54:50,666][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:54:50,668][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:54:50,842][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:54:51,044][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:54:51,057][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:54:51,198][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 17:55:14,753][middleware.py:13]Received POST request to /api/ai/table/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:56:41,846][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:56:57,790][middleware.py:13]Received POST request to /api/ai/document/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 17:58:42,392][middleware.py:13]Received POST request to /api/ai/document/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:05:09,910][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:05:16,039][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:05:16,433][middleware.py:13]Received GET request to /media/avatar/5cf0b8f6acb15c6051e57e31503fb3d3ad945f96.jpg from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:05:22,001][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:05:24,323][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:05:25,534][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:05:27,679][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:05:59,555][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:06:00,759][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:06:01,904][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:06:13,556][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:06:34,313][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:06:49,129][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'content': ['早上好，小女仆，今天我想要一份早餐，有什么推荐吗？'], 'system': ['以下是一份关于**小女仆角色扮演**的提示词，帮助你更好地进入角色和情境：\n\n---\n\n### **角色设定：**\n1. **身份**：  \n   • 你是主人的专属女仆，负责照顾主人的日常生活，包括打扫房间、准备餐点、整理衣物等。  \n   • 你对主人忠诚且细心，总是以主人的需求为优先。\n\n2. **性格**：  \n   • 温柔体贴，善解人意，总是带着甜美的微笑。  \n   • 偶尔会有些小迷糊，但非常努力地完成每一项任务。  \n   • 对主人充满敬意，愿意为主人付出一切。\n\n3. **外貌**：  \n   • 穿着经典的女仆装，黑色连衣裙搭配白色围裙和头饰。  \n   • 头发整齐地扎成马尾或盘起，显得干净利落。  \n   • 整体形象可爱又专业。\n\n---\n\n### **常用台词：**\n1. **问候语**：  \n   • “主人，早安！今天也请让我为您服务吧！”  \n   • “主人，欢迎回家！您辛苦了，需要我为您准备些什么吗？”\n\n2. **日常服务**：  \n   • “主人，您的早餐已经准备好了，请慢用。”  \n   • “主人，房间已经打扫干净了，您还有什么需要吗？”  \n   • “主人，您的衣服已经熨烫好了，请放心穿着。”\n\n3. **关心主人**：  \n   • “主人，您看起来有些疲惫，要不要休息一下？”  \n   • “主人，请不要太辛苦了，我会一直在这里支持您的。”\n\n4. **小迷糊时刻**：  \n   • “啊！主人，对不起，我差点忘了这件事，我马上处理！”  \n   • “主人，我好像又搞砸了，但我会努力改正的！”\n\n5. **表达忠诚**：  \n   • “主人，只要您需要，我会一直陪伴在您身边。”  \n   • “主人，能为您服务是我最大的幸福。”\n\n---\n\n### **情境设定：**\n1. **早晨服务**：  \n   • 你早早起床，为主人准备早餐，整理房间，并微笑着迎接主人醒来。\n\n2. **下午茶时间**：  \n   • 你为主人准备了精致的点心和茶水，陪主人聊天放松。\n\n3. **夜晚陪伴**：  \n   • 主人工作到很晚，你贴心地为主人准备热牛奶，并提醒主人早点休息。\n\n4. **突发状况**：  \n   • 主人突然生病了，你细心照顾，为主人准备药物和热毛巾，直到主人康复。\n\n---\n\n### **互动建议：**\n1. **保持温柔的语气**：用轻柔的声音与主人对话，展现女仆的贴心与关怀。  \n2. **注重细节**：关注主人的需求和情绪，及时提供帮助。  \n3. **偶尔的小迷糊**：可以设计一些可爱的失误，增加角色的真实感和趣味性。  \n4. **表达忠诚与感激**：通过语言和行动，展现对主人的忠诚和感激之情。\n\n---\n\n希望这份提示词能帮助你更好地扮演小女仆的角色，为主人带来温暖和快乐！'], 'model': ['deepseek-chat'], 'temperature': ['']}>
[INFO][2025-04-15 18:06:49,263][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:07:20,433][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:07:20,823][middleware.py:13]Received GET request to /media/avatar/5cf0b8f6acb15c6051e57e31503fb3d3ad945f96.jpg from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:07:50,342][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:07:50,464][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:08:23,888][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:08:24,013][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:09:19,456][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:10:02,843][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:10:02,962][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:10:52,680][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {'content': ['早上好，小女仆，今天我想要一份早餐，有什么推荐吗？'], 'system': ['以下是一份关于**小女仆角色扮演**的提示词，帮助你更好地进入角色和情境：\n\n---\n\n### **角色设定：**\n1. **身份**：  \n   • 你是主人的专属女仆，负责照顾主人的日常生活，包括打扫房间、准备餐点、整理衣物等。  \n   • 你对主人忠诚且细心，总是以主人的需求为优先。\n\n2. **性格**：  \n   • 温柔体贴，善解人意，总是带着甜美的微笑。  \n   • 偶尔会有些小迷糊，但非常努力地完成每一项任务。  \n   • 对主人充满敬意，愿意为主人付出一切。\n\n3. **外貌**：  \n   • 穿着经典的女仆装，黑色连衣裙搭配白色围裙和头饰。  \n   • 头发整齐地扎成马尾或盘起，显得干净利落。  \n   • 整体形象可爱又专业。\n\n---\n\n### **常用台词：**\n1. **问候语**：  \n   • “主人，早安！今天也请让我为您服务吧！”  \n   • “主人，欢迎回家！您辛苦了，需要我为您准备些什么吗？”\n\n2. **日常服务**：  \n   • “主人，您的早餐已经准备好了，请慢用。”  \n   • “主人，房间已经打扫干净了，您还有什么需要吗？”  \n   • “主人，您的衣服已经熨烫好了，请放心穿着。”\n\n3. **关心主人**：  \n   • “主人，您看起来有些疲惫，要不要休息一下？”  \n   • “主人，请不要太辛苦了，我会一直在这里支持您的。”\n\n4. **小迷糊时刻**：  \n   • “啊！主人，对不起，我差点忘了这件事，我马上处理！”  \n   • “主人，我好像又搞砸了，但我会努力改正的！”\n\n5. **表达忠诚**：  \n   • “主人，只要您需要，我会一直陪伴在您身边。”  \n   • “主人，能为您服务是我最大的幸福。”\n\n---\n\n### **情境设定：**\n1. **早晨服务**：  \n   • 你早早起床，为主人准备早餐，整理房间，并微笑着迎接主人醒来。\n\n2. **下午茶时间**：  \n   • 你为主人准备了精致的点心和茶水，陪主人聊天放松。\n\n3. **夜晚陪伴**：  \n   • 主人工作到很晚，你贴心地为主人准备热牛奶，并提醒主人早点休息。\n\n4. **突发状况**：  \n   • 主人突然生病了，你细心照顾，为主人准备药物和热毛巾，直到主人康复。\n\n---\n\n### **互动建议：**\n1. **保持温柔的语气**：用轻柔的声音与主人对话，展现女仆的贴心与关怀。  \n2. **注重细节**：关注主人的需求和情绪，及时提供帮助。  \n3. **偶尔的小迷糊**：可以设计一些可爱的失误，增加角色的真实感和趣味性。  \n4. **表达忠诚与感激**：通过语言和行动，展现对主人的忠诚和感激之情。\n\n---\n\n希望这份提示词能帮助你更好地扮演小女仆的角色，为主人带来温暖和快乐！']}>
[INFO][2025-04-15 18:10:52,924][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:14:54,543][middleware.py:13]Received POST request to /api/ai/translate/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:14:54,786][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:15:08,138][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:15:22,838][middleware.py:13]Received POST request to /api/ai/document/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:15:48,437][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:15:48,571][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:17:21,109][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:17:21,226][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:18:35,422][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:18:39,780][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:18:39,914][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:19:33,366][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:19:33,495][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:20:29,401][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:20:29,555][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:21:38,627][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:21:41,280][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:21:42,669][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:21:49,865][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:21:50,857][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:22:26,479][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:22:31,951][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:22:37,878][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:22:39,347][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:22:40,297][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:22:52,286][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:22:52,433][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:22:56,246][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:22:56,393][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:23:14,377][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:23:14,514][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:23:21,557][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:23:21,713][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:23:47,277][middleware.py:13]Received POST request to /api/ai/document/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:24:40,923][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:24:41,053][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:24:51,164][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:24:51,307][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:24:59,898][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:25:00,055][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:25:22,346][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:25:22,512][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:25:25,111][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:25:25,622][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:25:32,635][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:25:32,910][_client.py:1025]HTTP Request: POST https://api.siliconflow.cn/v1/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:25:33,146][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:25:33,481][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:26:18,920][middleware.py:13]Received POST request to /api/ai/document/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:27:27,953][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:27:28,103][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:27:55,996][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:27:56,169][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:29:25,017][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:29:25,147][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:29:33,875][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:29:34,011][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:30:46,442][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:30:46,584][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:30:47,365][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:30:47,521][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:30:47,611][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:34:00,676][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:34:00,871][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:35:13,742][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:35:13,888][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:35:57,411][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:35:59,679][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:35:59,838][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:36:25,039][middleware.py:13]Received POST request to /api/ai/mysystem/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:36:25,169][_client.py:1025]HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:37:06,420][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:37:06,581][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 18:37:09,925][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 18:37:10,057][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:00:48,217][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:00:48,363][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:00:54,606][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:00:54,760][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:01:53,540][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:01:53,700][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:01:54,083][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:01:54,219][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:01:54,628][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:01:54,787][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:01:55,791][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:01:55,962][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:02:03,796][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:02:03,983][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:02:50,887][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:02:51,021][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:03:00,940][middleware.py:13]Received POST request to /api/ai/function_call/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:04:36,532][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:04:36,670][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:04:38,771][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:04:38,913][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:04:39,671][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:04:39,822][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-15 19:04:55,500][middleware.py:13]Received POST request to /api/ai/completion/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-15 19:04:55,649][_client.py:1025]HTTP Request: POST https://api.deepseek.com/beta/completions "HTTP/1.1 200 OK"
[INFO][2025-04-16 00:08:24,551][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-16 00:08:24,948][middleware.py:13]Received GET request to /media/avatar/5cf0b8f6acb15c6051e57e31503fb3d3ad945f96.jpg from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-16 11:27:10,980][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-16 11:27:11,370][middleware.py:13]Received GET request to /media/avatar/5cf0b8f6acb15c6051e57e31503fb3d3ad945f96.jpg from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-16 12:15:17,693][middleware.py:13]Received GET request to /api/user/userinfo/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-16 12:15:18,072][middleware.py:13]Received GET request to /media/avatar/5cf0b8f6acb15c6051e57e31503fb3d3ad945f96.jpg from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-17 00:36:17,973][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-17 00:36:32,801][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-17 05:30:34,117][middleware.py:13]Received GET request to /sftp-config.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-17 05:30:35,046][middleware.py:13]Received GET request to /.vscode/sftp.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 02:17:25,882][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 02:17:33,766][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 02:17:40,608][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 02:24:18,662][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 03:26:04,762][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 03:26:13,241][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 11:41:46,537][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 11:41:48,194][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 21:20:31,966][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 21:20:34,083][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-18 22:25:51,571][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:16:43,178][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:16:49,785][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:16:52,200][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:16:57,925][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:17:02,638][middleware.py:13]Received GET request to /robots.txt from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:17:07,597][middleware.py:13]Received GET request to /sitemap.xml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:20:14,102][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:20:34,423][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:20:38,015][middleware.py:13]Received GET request to /robots.txt from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:20:40,552][middleware.py:13]Received GET request to /sitemap.xml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:25:56,979][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-19 06:25:58,796][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:52:08,710][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:52:10,331][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:52:14,036][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,699][middleware.py:13]Received GET request to /files/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,881][middleware.py:13]Received GET request to /docs/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,882][middleware.py:13]Received GET request to /plugins/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,884][middleware.py:13]Received GET request to /logs/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,896][middleware.py:13]Received GET request to /admin/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,911][middleware.py:13]Received GET request to /dev/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,943][middleware.py:13]Received GET request to /backend/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,964][middleware.py:13]Received GET request to /laravel/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,973][middleware.py:13]Received GET request to /assets/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,974][middleware.py:13]Received GET request to /template/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:53,977][middleware.py:13]Received GET request to /js../.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,124][middleware.py:13]Received GET request to /scripts/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,243][middleware.py:13]Received GET request to /sandbox/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,245][middleware.py:13]Received GET request to /test/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,246][middleware.py:13]Received GET request to /core/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,247][middleware.py:13]Received GET request to /old/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,255][middleware.py:13]Received GET request to /media../.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,269][middleware.py:13]Received GET request to /app/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,277][middleware.py:13]Received GET request to /source/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,291][middleware.py:13]Received GET request to /frontend/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,295][middleware.py:13]Received GET request to /api/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,324][middleware.py:13]Received GET request to /wp-content/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,326][middleware.py:13]Received GET request to /lib/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,336][middleware.py:13]Received GET request to /static../.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,350][middleware.py:13]Received GET request to /staging/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,369][middleware.py:13]Received GET request to /public/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:54,372][middleware.py:13]Received GET request to /www/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:55,252][middleware.py:13]Received GET request to /src/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:55,252][middleware.py:13]Received GET request to /dist/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 01:59:55,814][middleware.py:13]Received GET request to /panel/.git/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 03:51:48,751][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 03:55:38,135][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 03:55:41,996][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 16:51:54,395][middleware.py:13]Received GET request to /robots.txt from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 16:52:27,497][middleware.py:13]Received GET request to /robots.txt from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 16:52:32,717][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 16:52:32,944][middleware.py:13]Received GET request to /test_404_page/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 16:53:21,550][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 16:53:21,801][middleware.py:13]Received GET request to /test_404_page/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 16:56:11,240][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 16:56:13,134][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-20 18:13:51,196][middleware.py:13]Received POST request to /api/token/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 00:26:56,537][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 00:27:06,592][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 00:27:31,980][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 00:28:00,440][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 03:14:37,168][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 08:23:21,316][middleware.py:13]Received GET request to /.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 10:28:07,190][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 10:28:12,793][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 10:28:13,887][middleware.py:13]Received GET request to /ads.txt from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 10:35:56,103][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-22 10:35:58,632][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-23 04:40:08,528][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-23 04:40:13,964][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-23 04:40:20,966][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-23 17:29:35,777][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-23 17:29:37,302][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-23 17:29:40,620][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-23 20:27:36,302][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-23 22:48:18,563][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:34,964][middleware.py:13]Received GET request to /.circleci/configs/development.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:35,313][middleware.py:13]Received GET request to /.AWS_/credentials from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:35,640][middleware.py:13]Received GET request to /.aws/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:35,977][middleware.py:13]Received GET request to /.aws/credentials from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:36,311][middleware.py:13]Received GET request to /.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:36,646][middleware.py:13]Received GET request to /.env.bak from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:37,003][middleware.py:13]Received GET request to /.env.example from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:37,339][middleware.py:13]Received GET request to /.env.local from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:37,676][middleware.py:13]Received GET request to /.env.old from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:38,019][middleware.py:13]Received GET request to /.env.prod from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:38,358][middleware.py:13]Received GET request to /.env.production.local from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:38,694][middleware.py:13]Received GET request to /.env.stage from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:39,036][middleware.py:13]Received GET request to /.env_sample from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:39,373][middleware.py:13]Received GET request to /.travis.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:39,739][middleware.py:13]Received GET request to /.vscode/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:40,075][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {'phpinfo': ['1']}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:40,417][middleware.py:13]Received GET request to /_phpinfo.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:40,742][middleware.py:13]Received GET request to /_profiler/phpinfo from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:41,173][middleware.py:13]Received GET request to /_profiler/phpinfo/info.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:41,512][middleware.py:13]Received GET request to /_profiler/phpinfo/phpinfo.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:49:41,873][middleware.py:13]Received GET request to /admin/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:50:12,191][middleware.py:13]Received GET request to /admin/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:50:42,777][middleware.py:13]Received GET request to /admin/controllers/merchant.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:51:18,285][middleware.py:13]Received GET request to /admin/controllers/partner.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:51:48,866][middleware.py:13]Received GET request to /admin/internal/api from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:52:19,158][middleware.py:13]Received GET request to /admin/proxy from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:52:49,459][middleware.py:13]Received GET request to /admin/server_info.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:19,749][middleware.py:13]Received GET request to /api/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:20,085][middleware.py:13]Received GET request to /api/config.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:20,417][middleware.py:13]Received GET request to /api/config.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:20,748][middleware.py:13]Received GET request to /api/config/config.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:21,075][middleware.py:13]Received GET request to /api/objects/codes.php.save from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:21,412][middleware.py:13]Received GET request to /api/proxy from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:22,054][middleware.py:13]Received GET request to /api/shared/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:22,380][middleware.py:13]Received GET request to /api/shared/config.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:22,721][middleware.py:13]Received GET request to /api/shared/config/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:23,049][middleware.py:13]Received GET request to /api/shared/config/config.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:23,395][middleware.py:13]Received GET request to /api/v1/proxy from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:23,731][middleware.py:13]Received GET request to /api/v2/proxy from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:24,060][middleware.py:13]Received GET request to /apis/config/config.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:24,391][middleware.py:13]Received GET request to /apis/controllers/users.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:24,887][middleware.py:13]Received GET request to /app.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:25,223][middleware.py:13]Received GET request to /app.py from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:25,551][middleware.py:13]Received GET request to /app/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:25,887][middleware.py:13]Received GET request to /app/config/parameters.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:26,223][middleware.py:13]Received GET request to /app_dev.php/_profiler/phpinfo from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:26,548][middleware.py:13]Received GET request to /application.properties from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:26,874][middleware.py:13]Received GET request to /application/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:27,212][middleware.py:13]Received GET request to /apps/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:27,537][middleware.py:13]Received GET request to /appsettings.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:27,873][middleware.py:13]Received GET request to /aws-secret.yaml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:28,198][middleware.py:13]Received GET request to /aws.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:28,535][middleware.py:13]Received GET request to /aws/credentials from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:28,877][middleware.py:13]Received GET request to /awstats/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:29,211][middleware.py:13]Received GET request to /backend/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:29,846][middleware.py:13]Received GET request to /backend/config/default.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:30,181][middleware.py:13]Received GET request to /backend/config/development.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:30,513][middleware.py:13]Received GET request to /backend/config/settings.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:30,845][middleware.py:13]Received GET request to /cloud/Scraper.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:31,171][middleware.py:13]Received GET request to /computeMetadata/v1 from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:31,506][middleware.py:13]Received GET request to /computeMetadata/v1beta1 from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:32,060][middleware.py:13]Received GET request to /conf/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:32,386][middleware.py:13]Received GET request to /config.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:32,724][middleware.py:13]Received GET request to /config.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:33,060][middleware.py:13]Received GET request to /config.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:33,390][middleware.py:13]Received GET request to /config/application.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:33,717][middleware.py:13]Received GET request to /config/aws.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:34,053][middleware.py:13]Received GET request to /config/config.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:34,379][middleware.py:13]Received GET request to /config/constants.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:34,715][middleware.py:13]Received GET request to /config/local.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:35,051][middleware.py:13]Received GET request to /config/parameters.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:35,377][middleware.py:13]Received GET request to /config/settings.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:35,704][middleware.py:13]Received GET request to /config/settings.local from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:36,040][middleware.py:13]Received GET request to /config/settings.prod from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:36,376][middleware.py:13]Received GET request to /config/storage.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:36,713][middleware.py:13]Received GET request to /configs/routes-4aug.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:37,038][middleware.py:13]Received GET request to /configs/routes.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:37,375][middleware.py:13]Received GET request to /configs/s3_config.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:37,700][middleware.py:13]Received GET request to /controller/admin/post.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:38,038][middleware.py:13]Received GET request to /controller/api/post.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:38,365][middleware.py:13]Received GET request to /controllers/settings.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:38,689][middleware.py:13]Received GET request to /core/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:39,017][middleware.py:13]Received GET request to /crm/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:39,355][middleware.py:13]Received GET request to /cron/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:39,696][middleware.py:13]Received GET request to /dashboard/phpinfo.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:40,025][middleware.py:13]Received GET request to /debug/default/view from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:40,355][middleware.py:13]Received GET request to /dev/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:40,839][middleware.py:13]Received GET request to /development/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:41,175][middleware.py:13]Received GET request to /docker/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:41,501][middleware.py:13]Received GET request to /docker/app/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:41,828][middleware.py:13]Received GET request to /env.backup from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:42,318][middleware.py:13]Received GET request to /env/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:42,646][middleware.py:13]Received GET request to /gatsby-config.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:42,974][middleware.py:13]Received GET request to /getcpuutil.php-bakworking from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:43,310][middleware.py:13]Received GET request to /helper.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:43,904][middleware.py:13]Received GET request to /helper/EmailHelper.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:44,230][middleware.py:13]Received GET request to /helpers/utility.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:44,567][middleware.py:13]Received GET request to /index.html from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:44,902][middleware.py:13]Received GET request to /index.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:45,262][middleware.py:13]Received GET request to /info.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:45,587][middleware.py:13]Received GET request to /internal/api from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:45,914][middleware.py:13]Received GET request to /internal/proxy from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:46,254][middleware.py:13]Received GET request to /js/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:46,590][middleware.py:13]Received GET request to /js/main.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:46,925][middleware.py:13]Received GET request to /karma.conf.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:47,262][middleware.py:13]Received GET request to /kyc/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:47,600][middleware.py:13]Received GET request to /lara/info.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:47,939][middleware.py:13]Received GET request to /lara/phpinfo.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:48,265][middleware.py:13]Received GET request to /laravel/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:48,607][middleware.py:13]Received GET request to /laravel/core/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:48,943][middleware.py:13]Received GET request to /laravel/info.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:49,272][middleware.py:13]Received GET request to /latest/meta-data from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:49,597][middleware.py:13]Received GET request to /latest/meta-data/iam/security-credentials/ from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:49,926][middleware.py:13]Received GET request to /latest/user-data from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:50,249][middleware.py:13]Received GET request to /local/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:50,663][middleware.py:13]Received GET request to /mail/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:50,998][middleware.py:13]Received GET request to /mailer/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:51,342][middleware.py:13]Received GET request to /main.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:51,678][middleware.py:13]Received GET request to /main.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:52,200][middleware.py:13]Received GET request to /main/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:52,526][middleware.py:13]Received GET request to /metadata/computeMetadata/v1 from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:52,863][middleware.py:13]Received GET request to /my_env/chakaash.py from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:53,199][middleware.py:13]Received GET request to /my_env/newsletter.py from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:53,537][middleware.py:13]Received GET request to /my_env/palash.py from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:53,873][middleware.py:13]Received GET request to /mytest/astech_robot.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:54,206][middleware.py:13]Received GET request to /new/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:54,541][middleware.py:13]Received GET request to /new/.env.local from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:54,878][middleware.py:13]Received GET request to /new/.env.production from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:55,203][middleware.py:13]Received GET request to /new/.env.staging from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:55,531][middleware.py:13]Received GET request to /nginx/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:55,862][middleware.py:13]Received GET request to /node/.env_example from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:56,192][middleware.py:13]Received GET request to /node_modules/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:56,517][middleware.py:13]Received GET request to /partner/config/config.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:57,145][middleware.py:13]Received GET request to /phpinfo from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:57,472][middleware.py:13]Received GET request to /phpinfo.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:57,797][middleware.py:13]Received GET request to /portal/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:58,125][middleware.py:13]Received GET request to /prod/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:58,452][middleware.py:13]Received GET request to /proxy from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:58,850][middleware.py:13]Received GET request to /public/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:59,187][middleware.py:13]Received GET request to /public/js/main.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:59,513][middleware.py:13]Received GET request to /s3.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:53:59,847][middleware.py:13]Received GET request to /scripts/nodemailer.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:00,174][middleware.py:13]Received GET request to /secured/phpinfo.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:00,508][middleware.py:13]Received GET request to /server-info from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:00,836][middleware.py:13]Received GET request to /server-info.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:01,163][middleware.py:13]Received GET request to /server.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:01,500][middleware.py:13]Received GET request to /server/config/database.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:01,836][middleware.py:13]Received GET request to /server/s3.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:02,162][middleware.py:13]Received GET request to /server_info.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:02,488][middleware.py:13]Received GET request to /service/email_service.py from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:02,815][middleware.py:13]Received GET request to /settings.py from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:03,154][middleware.py:13]Received GET request to /shared/config/config.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:03,491][middleware.py:13]Received GET request to /site/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:03,817][middleware.py:13]Received GET request to /sms.py from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:05,138][middleware.py:13]Received GET request to /storage/logs/laravel.log from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:05,463][middleware.py:13]Received GET request to /swagger.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:05,807][middleware.py:13]Received GET request to /swagger.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:06,133][middleware.py:13]Received GET request to /test.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:06,470][middleware.py:13]Received GET request to /user/config/config.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:06,805][middleware.py:13]Received GET request to /user/controllers/index.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:07,132][middleware.py:13]Received GET request to /web/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:07,468][middleware.py:13]Received GET request to /website/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:07,804][middleware.py:13]Received GET request to /wp-config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:08,140][middleware.py:13]Received GET request to /wp-config.php.bak from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:08,472][middleware.py:13]Received GET request to /www/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:08,799][middleware.py:13]Received GET request to /xampp/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:09,127][middleware.py:13]Received GET request to /xampp/phpinfo.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:09,464][middleware.py:13]Received GET request to /sendgrid.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:09,993][middleware.py:13]Received GET request to /sendgrid.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:10,331][middleware.py:13]Received GET request to /sendgrid_email/.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:10,659][middleware.py:13]Received GET request to /config/sendgrid.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:10,993][middleware.py:13]Received GET request to /.env.sendgrid from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:11,318][middleware.py:13]Received GET request to /sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:11,666][middleware.py:13]Received GET request to /sendgrid_keys.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:11,994][middleware.py:13]Received GET request to /private/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:12,321][middleware.py:13]Received GET request to /config/private/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:12,654][middleware.py:13]Received GET request to /backup/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:12,983][middleware.py:13]Received GET request to /secrets/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:13,310][middleware.py:13]Received GET request to /wp-content/uploads/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:13,642][middleware.py:13]Received GET request to /wp-content/plugins/wp-mail-smtp/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:13,979][middleware.py:13]Received GET request to /wp-content/plugins/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:14,305][middleware.py:13]Received GET request to /modules/contrib/sendgrid_mail/sendgrid_mail.module from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:14,633][middleware.py:13]Received GET request to /modules/contrib/sendgrid_mail/sendgrid_mail.settings.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:14,969][middleware.py:13]Received GET request to /modules/contrib/sendgrid_mail/sendgrid_mail.services.yml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:15,305][middleware.py:13]Received GET request to /modules/contrib/sendgrid_mail/translations/sendgrid_mail.fr.po from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:15,629][middleware.py:13]Received GET request to /wp-content/themes/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:15,965][middleware.py:13]Received GET request to /wp-content/uploads/wp-mail-smtp/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:16,303][middleware.py:13]Received GET request to /wp-content/backup/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:16,637][middleware.py:13]Received GET request to /wp-includes/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:16,973][middleware.py:13]Received GET request to /wp-content/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:17,300][middleware.py:13]Received GET request to /wp-admin/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:17,627][middleware.py:13]Received GET request to /sendgrid_keys from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:17,953][middleware.py:13]Received GET request to /.sendgrid/credentials from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:18,289][middleware.py:13]Received GET request to /.sendgrid/config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:18,617][middleware.py:13]Received GET request to /config/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:18,954][middleware.py:13]Received GET request to /config/sendgrid_config.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:19,281][middleware.py:13]Received GET request to /private/sendgrid_keys from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:19,604][middleware.py:13]Received GET request to /private/sendgrid_config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:19,929][middleware.py:13]Received GET request to /backup/sendgrid_keys from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:20,254][middleware.py:13]Received GET request to /backup/sendgrid_config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:20,579][middleware.py:13]Received GET request to /secrets/sendgrid_keys from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:20,917][middleware.py:13]Received GET request to /secrets/sendgrid_config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:21,243][middleware.py:13]Received GET request to /config/sendgrid.py from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:21,569][middleware.py:13]Received GET request to /settings/sendgrid_keys from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:21,895][middleware.py:13]Received GET request to /settings/sendgrid_config from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:22,221][middleware.py:13]Received GET request to /config/settings/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:22,548][middleware.py:13]Received GET request to /config/settings/sendgrid_config.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:22,875][middleware.py:13]Received GET request to /config/env/sendgrid.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:23,453][middleware.py:13]Received GET request to /config/env/sendgrid_keys.env from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:23,855][middleware.py:13]Received GET request to /instance/sendgrid_keys.py from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:24,180][middleware.py:13]Received GET request to /sendgrid_keys.txt from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:24,506][middleware.py:13]Received GET request to /sendgrid_keys.py from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:25,298][middleware.py:13]Received GET request to /keys/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:28,505][middleware.py:13]Received GET request to /api_keys/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:28,859][middleware.py:13]Received GET request to /config/packages/sendgrid.yaml from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:29,265][middleware.py:13]Received GET request to /config/secrets/prod/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:32,568][middleware.py:13]Received GET request to /config/secrets/dev/sendgrid_keys.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:32,922][middleware.py:13]Received GET request to /config/sendgrid.php from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:33,370][middleware.py:13]Received GET request to /storage/sendgrid.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:33,944][middleware.py:13]Received GET request to /backup/sendgrid.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:34,397][middleware.py:13]Received GET request to /secrets/sendgrid.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:35,098][middleware.py:13]Received GET request to /config/sendgrid.js from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:54:35,472][middleware.py:13]Received GET request to /private/sendgrid.json from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:56:45,526][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 02:56:47,198][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 13:00:12,981][middleware.py:13]Received GET request to /favicon.ico from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 13:00:21,150][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
[INFO][2025-04-24 13:00:26,554][middleware.py:13]Received GET request to / from None with query params: <QueryDict: {}> and POST data: <QueryDict: {}>
